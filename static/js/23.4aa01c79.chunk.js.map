{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/title/TitleFeed.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","PROVIDER_OPTION","TitleFeed","themeStretch","useSettings","isMountedRef","useIsMountedRef","enqueueSnackbar","useSnackbar","useState","feeds","setFeeds","useSearchParams","page","searchParams","setSearchParams","total","setTotal","getFeeds","useCallback","a","axios","get","params","paramsToObject","limit","sortBy","populate","data","current","results","totalPages","console","error","setNewParams","newParams","Object","keys","forEach","key","useEffect","title","PATH_WIBU","label","root","container","spacing","value","exclusive","onChange","event","_provider","provider","fullWidth","toUpperCase","timestamp","description","_id","item","xs","md","p","one","src","coverArt","ratio","altTitle","opacity","formatDistance","Date","locale","vi","addSuffix","justifyContent","my","count","Number","urlParams","entries","result"],"mappings":"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","file":"static/js/23.4aa01c79.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { useState, useCallback, useEffect } from 'react';\r\nimport { Link as RouterLink, useSearchParams } from 'react-router-dom';\r\n// @mui\r\nimport { Container, Grid, Typography, Button, Card, Link, Pagination, Box, CardActionArea, ToggleButtonGroup, ToggleButton } from '@mui/material';\r\n// hooks\r\nimport { useSnackbar } from 'notistack';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport Iconify from '../../components/Iconify';\r\n// utils\r\nimport axios from '../../utils/axios';\r\nimport { formatDistance } from 'date-fns';\r\nimport { vi } from 'date-fns/locale'\r\n// paths\r\nimport { PATH_WIBU } from '../../routes/paths';\r\nimport Image from '../../components/Image';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PROVIDER_OPTION = ['blogtruyen', 'mangadex', 'novelupdate'];\r\n\r\nexport default function TitleFeed() {\r\n  const { themeStretch } = useSettings();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [feeds, setFeeds] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\r\n  const [total, setTotal] = useState(1);\r\n\r\n  const getFeeds = useCallback(async () => {\r\n    try {\r\n      const { data } = await axios.get('/v1/titles/feed', {\r\n        params: { ...paramsToObject(searchParams), limit: 12, sortBy: 'timestamp:desc', populate: 'title' }\r\n      });\r\n      if (isMountedRef.current) {\r\n        setFeeds(data.results);\r\n        setTotal(data.totalPages);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      enqueueSnackbar(err, { variant: 'error' });\r\n    }\r\n  }, [isMountedRef, searchParams]);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setNewParams({ page });\r\n  }\r\n\r\n  const setNewParams = (params) => {\r\n    const newParams = paramsToObject(searchParams);\r\n    Object.keys(params).forEach(key => {\r\n      if (params[key] === null) delete newParams[key];\r\n      else newParams[key] = params[key];\r\n    });\r\n    setSearchParams({\r\n      ...newParams\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFeeds();\r\n    return () => { setFeeds([]); }\r\n  }, [getFeeds]);\r\n\r\n  const handleProviderClick = (event, _provider) => {\r\n    if (_provider === searchParams.get(\"provider\")) setNewParams({ provider: null, page: 1 });\r\n    else setNewParams({ provider: _provider, page: 1 });\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Thuốc mới\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Thuốc mới\"\r\n          links={[\r\n            { name: PATH_WIBU.label, href: PATH_WIBU.root },\r\n            { name: PATH_WIBU.title.label, href: PATH_WIBU.title.root },\r\n          ]}\r\n        />\r\n        <Grid container spacing={2} sx={{ mb: 3 }}>\r\n          <ToggleButtonGroup\r\n            color=\"primary\"\r\n            value={searchParams.get(\"provider\")}\r\n            exclusive\r\n            onChange={handleProviderClick}\r\n            fullWidth\r\n            sx={{ mb: 3 }}\r\n          >\r\n            {\r\n              PROVIDER_OPTION.map(_provider => (\r\n                <ToggleButton\r\n                  value={_provider}\r\n                  key={_provider}\r\n                >\r\n                  {_provider.toUpperCase()}\r\n                </ToggleButton>\r\n              ))\r\n            }\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          {\r\n            feeds.map(\r\n              ({ title, timestamp, provider, link, description, _id }) =>\r\n                <Grid item xs={12} md={6} key={_id}>\r\n                  <Card sx={{ p: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={2}>\r\n                        <Card sx={{ borderRadius: 1 }}>\r\n                          <CardActionArea component={RouterLink} to={`${PATH_WIBU.title.one}/${title._id}`}>\r\n                            <Image src={title.coverArt[0]} ratio='3/4' />\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                      <Grid item xs={10}>\r\n                        <Typography component={Link} href={link} target=\"_blank\" variant='h6' color=\"primary.main\">{description || title.name}</Typography>\r\n                        <Typography variant='body1'>{title.altTitle}</Typography>\r\n                        <Typography variant='body2' sx={{ opacity: 0.72 }}>\r\n                          {`Cập nhật lần cuối vào ${formatDistance(new Date(timestamp), new Date(), { locale: vi, addSuffix: true })} tại `}\r\n                          <Button component={Link} href={link} target=\"_blank\">{provider}</Button>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Card>\r\n                </Grid>\r\n            )\r\n          }\r\n        </Grid>\r\n        <Box sx={{ display: 'flex', justifyContent: 'right' }}>\r\n          <Pagination sx={{ my: 2 }} count={total} page={Number(searchParams.get(\"page\"))} onChange={handlePageChange} />\r\n        </Box>\r\n      </Container >\r\n    </Page >\r\n  );\r\n}\r\n\r\nfunction paramsToObject(urlParams) {\r\n  const entries = urlParams.entries();\r\n  const result = {}\r\n  for (const [key, value] of entries) { // each 'entry' is a [key, value] tupple\r\n    result[key] = value;\r\n  }\r\n  return result;\r\n}"],"sourceRoot":""}