{"version":3,"sources":["components/title/TitleCard.js","components/Label.js","sections/title/TitleSearch.js","sections/list/ListDragAndDrop.js","sections/list/ListNewForm.js","pages/list/NewList.js"],"names":["TitleCard","title","src","coverArt","alt","en","ratio","OverlayStyle","CaptionStyle","component","RouterLink","to","PATH_WIBU","one","_id","line","width","variant","altTitle","sx","opacity","label","type","color","size","theme","position","top","spacing","left","styled","height","backgroundImage","palette","grey","alpha","CardActionArea","bottom","display","alignItems","justifyContent","common","white","padding","RootStyle","ownerState","isLight","mode","minWidth","lineHeight","borderRadius","cursor","whiteSpace","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","styleGhost","text","primary","secondary","Label","children","other","columns","field","headerName","renderCell","params","TableCell","Card","mr","Image","disabledEffect","name","getValue","id","Typography","noWrap","value","TitleSearch","handleAddButtonClick","useState","query","setQuery","results","setResults","selections","setSelections","handleSearchButtonClick","a","axiosInstance","url","method","data","Stack","TextField","fullWidth","onChange","event","target","LoadingButton","onClick","style","rows","pageSize","checkboxSelection","hideFooterPagination","onSelectionModelChange","newSelection","filter","t","includes","ListDragAndDrop","titles","handleDragEnd","handleRemoveButtonClick","onDragEnd","droppableId","provided","snapshot","droppableProps","ref","innerRef","map","index","draggableId","draggableProps","dragHandleProps","p","m","Grid","container","item","xs","Avatar","bgcolor","Box","flexWrap","genres","genre","tags","tag","Fab","right","Iconify","icon","placeholder","LabelStyle","sublist2","marginBottom","ListNewForm","isEdit","currentList","navigate","useNavigate","enqueueSnackbar","useSnackbar","ListSchema","Yup","shape","required","min","defaultValues","useMemo","description","methods","useForm","resolver","yupResolver","reset","watch","setValue","handleSubmit","isSubmitting","getValues","formState","values","useEffect","onSubmit","list","console","error","md","mb","CardHeader","CardContent","simple","Alert","severity","result","destination","newItems","reorder","source","titleId","uniqBy","loading","startIndex","endIndex","Array","from","splice","removed","NewList","themeStretch","useSettings","maxWidth"],"mappings":"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","file":"static/js/16.3d139e71.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\n\r\nimport { Typography, Card, CardActionArea, Chip,  } from '@mui/material';\r\n// components\r\nimport Image from '../Image';\r\nimport TextMaxLine from '../TextMaxLine';\r\n// paths\r\nimport { PATH_WIBU } from '../../routes/paths';\r\n\r\nexport default function TitleCard({ title }) {\r\n    return (\r\n        <Card>\r\n            <Image src={title.coverArt[0]} alt={title.title?.en} ratio='4/6' />\r\n            <OverlayStyle />\r\n            <CaptionStyle component={RouterLink} to={`${PATH_WIBU.title.one}/${title._id}`}>\r\n                <TextMaxLine line={2}>\r\n                    <Typography width=\"100%\" variant=\"subtitle1\" component=\"span\">{title.title?.en}</Typography>\r\n                    {\r\n                        title?.altTitle &&\r\n                        <Typography width=\"100%\" variant=\"body2\" sx={{ opacity: 0.72 }} component=\"span\">\r\n                            {` - ${title?.altTitle}`}\r\n                        </Typography>\r\n                    }\r\n                </TextMaxLine>\r\n            </CaptionStyle>\r\n            <Chip label={title.type} color=\"primary\" size=\"small\" sx={theme => ({ position: 'absolute', top: theme.spacing(0.5), left: theme.spacing(0.5), opacity: 0.9 })} />\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nconst OverlayStyle = styled('div')(({ theme }) => ({\r\n    top: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    backgroundImage: `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(theme.palette.grey[900], 0)} 50%)`,\r\n}));\r\n\r\nconst CaptionStyle = styled(CardActionArea)(({ theme }) => ({\r\n    // ...cssStyles().bgBlur({ blur: 2, color: theme.palette.grey[900] }),\r\n    bottom: 0,\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    justifyContent: 'space-between',\r\n    color: theme.palette.common.white,\r\n    padding: theme.spacing(1),\r\n}));","import PropTypes from 'prop-types';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, ownerState }) => {\n  const isLight = theme.palette.mode === 'light';\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost']),\n};\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n// @mui\r\nimport { TextField, Card, CardContent, Grid, CardHeader, Typography, TableCell, Stack } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n// components\r\nimport TitleCard from '../../components/title/TitleCard';\r\nimport Image from '../../components/Image';\r\n// utils\r\nimport axiosInstance from '../../utils/axios';\r\n\r\nconst columns = [\r\n    {\r\n        field: 'name',\r\n        headerName: 'Tên',\r\n        width: 500,\r\n        renderCell: (params) => (\r\n            <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Card sx={{ borderRadius: 1, mr: 2, width: 64 }}>\r\n                    <Image\r\n                        disabledEffect\r\n                        alt={params.name}\r\n                        src={params.getValue(params.id, 'coverArt')[0]}\r\n                        ratio='4/6'\r\n                    />\r\n                </Card>\r\n                <Typography variant=\"subtitle2\" noWrap>\r\n                    {params.value}\r\n                </Typography>\r\n            </TableCell>\r\n        )\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Loại',\r\n        width: 90,\r\n    },\r\n];\r\n\r\nexport default function TitleSearch({ handleAddButtonClick }) {\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [selections, setSelections] = useState([]);\r\n    const handleChange = (event) => {\r\n        setQuery(event.target.value);\r\n    }\r\n\r\n    const handleSearchButtonClick = async () => {\r\n        const { data: { results } } = await axiosInstance({\r\n            url: '/v1/titles',\r\n            method: 'get',\r\n            params: { query }\r\n        })\r\n        setResults(results);\r\n    }\r\n\r\n    return (\r\n        <Stack spacing={1}>\r\n            <TextField\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n            <LoadingButton\r\n                variant='contained'\r\n                onClick={handleSearchButtonClick}\r\n            >\r\n                Tìm\r\n            </LoadingButton>\r\n            <div style={{ height: 300, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={results}\r\n                    columns={columns}\r\n                    pageSize={25}\r\n                    checkboxSelection\r\n                    hideFooterPagination\r\n                    onSelectionModelChange={(newSelection) => {\r\n                        setSelections(results.filter(t => newSelection.includes(t._id)));\r\n                    }}\r\n                />\r\n            </div>\r\n            <LoadingButton\r\n                variant='contained'\r\n                onClick={() => { handleAddButtonClick(selections) }}\r\n            >\r\n                Thêm vào bộ sưu tập\r\n            </LoadingButton>\r\n        </Stack>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// @mui\r\nimport { Card, CardContent, CardActionArea, Box, Grid, Typography, Avatar } from '@mui/material';\r\nimport Fab from '@mui/material/Fab';\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport Label from '../../components/Label';\r\nimport Iconify from '../../components/Iconify';\r\n// paths\r\nimport {\r\n    PATH_WIBU\r\n} from \"../../routes/paths\";\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    padding: grid,\r\n});\r\n\r\nexport default function ListDragAndDrop({ titles, handleDragEnd, handleRemoveButtonClick }) {\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        {titles.map((title, index) => (\r\n                            <Draggable key={title.id} draggableId={title.id} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                    >\r\n                                        <Card sx={{ p: 1, m: 1 }}>\r\n                                            <Grid container spacing={2}>\r\n                                                <Grid item xs={2}>\r\n                                                    <Card sx={{ borderRadius: 1 }}>\r\n                                                        <CardActionArea component={RouterLink} to={`${PATH_WIBU.title.one}/${title._id}`}>\r\n                                                            <Image src={title.coverArt[0]} ratio='3/4' />\r\n                                                        </CardActionArea>\r\n                                                    </Card>\r\n                                                    <Avatar\r\n                                                        sx={{\r\n                                                            position: 'absolute',\r\n                                                            top: 0,\r\n                                                            left: 0,\r\n                                                            bgcolor: 'primary.main',\r\n                                                            color: 'common.white'\r\n                                                        }}\r\n                                                    >{index + 1}\r\n                                                    </Avatar>\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs={10}>\r\n                                                    <Typography variant='h6'>{title.name}</Typography>\r\n                                                    <Typography variant='body1'>{title.altTitle}</Typography>\r\n                                                    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                                                        {title?.genres.map(genre => <Label key={genre} color='primary' sx={{ m: 0.2 }}>{genre}</Label>)}\r\n                                                        {title?.tags.map(tag => <Label key={tag} color='primary' variant='outlined' sx={{ m: 0.2 }}>{tag}</Label>)}\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Fab\r\n                                                size=\"small\"\r\n                                                aria-label=\"delete\"\r\n                                                sx={{\r\n                                                    position: 'absolute',\r\n                                                    bottom: 0,\r\n                                                    right: 0,\r\n                                                    bgcolor: 'error.main',\r\n                                                    color: 'common.white'\r\n                                                }}\r\n                                                onClick={() => { handleRemoveButtonClick(title.id) }}\r\n                                            >\r\n                                                <Iconify icon='ep:delete-filled' />\r\n                                            </Fab>\r\n                                        </Card>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { uniqBy } from 'lodash';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Card, Grid, Stack, Typography, CardHeader, CardContent, Alert } from '@mui/material';\r\n// routes\r\nimport { PATH_WIBU } from '../../routes/paths';\r\n// components\r\nimport {\r\n    FormProvider,\r\n    RHFEditor,\r\n    RHFTextField,\r\n} from '../../components/hook-form';\r\nimport TitleSearch from '../title/TitleSearch';\r\nimport ListDragAndDrop from './ListDragAndDrop';\r\n// utils\r\nimport axiosInstance from '../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n    ...theme.typography.sublist2,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nListNewForm.propTypes = {\r\n    isEdit: PropTypes.bool,\r\n    currentList: PropTypes.object,\r\n};\r\n\r\nexport default function ListNewForm({ isEdit, currentList }) {\r\n    const navigate = useNavigate();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const ListSchema = Yup.object().shape({\r\n        name: Yup.string().required('Name is required'),\r\n        titles: Yup.array().min(0, 'Images is required'),\r\n    });\r\n\r\n    const defaultValues = useMemo(\r\n        () => ({\r\n            name: currentList?.name || '',\r\n            description: currentList?.description || '',\r\n            titles: currentList?.titles || [],\r\n        }),\r\n        [currentList]\r\n    );\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(ListSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        watch,\r\n        setValue,\r\n        handleSubmit,\r\n        getValues,\r\n        formState: { isSubmitting },\r\n    } = methods;\r\n\r\n    const values = watch();\r\n\r\n    useEffect(() => {\r\n        if (isEdit && currentList) {\r\n            reset(defaultValues);\r\n        }\r\n        if (!isEdit) {\r\n            reset(defaultValues);\r\n        }\r\n    }, [isEdit, currentList]);\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            let id;\r\n            data.titles = data.titles.map(t => t.id);\r\n            if (isEdit) {\r\n                const { data: { _id } } = await axiosInstance({\r\n                    url: `/v1/lists/${currentList._id}`,\r\n                    method: 'post',\r\n                    data\r\n                })\r\n                id = _id;\r\n            } else {\r\n                const { data: { _id } } = await axiosInstance({\r\n                    url: '/v1/lists',\r\n                    method: 'post',\r\n                    data\r\n                })\r\n                id = _id;\r\n            }\r\n            enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n            navigate(`${PATH_WIBU.list.one}/${id}`);\r\n        } catch (error) {\r\n            console.error(error);\r\n            enqueueSnackbar(error, { color: 'error' });\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = (result) => {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const newItems = reorder(\r\n            values.titles,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        setValue('titles', newItems);\r\n    }\r\n\r\n    const handleAddButtonClick = (titles) => {\r\n        setValue('titles', uniqBy([...values.titles, ...titles], 'id'));\r\n    }\r\n\r\n    const handleRemoveButtonClick = (titleId) => {\r\n        setValue('titles', values.titles.filter(t => t.id !== titleId));\r\n    }\r\n\r\n    return (\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card sx={{ mb: 1 }}>\r\n                        <CardHeader title=\"Thông tin bộ sưu tập\" />\r\n                        <CardContent>\r\n                            <Stack spacing={1}>\r\n                                <RHFTextField name=\"name\" label=\"Tên bộ sưu tập\" />\r\n                                <div>\r\n                                    <LabelStyle>Mô tả bộ sưu tập này</LabelStyle>\r\n                                    <RHFEditor simple name=\"description\" />\r\n                                </div>\r\n                            </Stack>\r\n                        </CardContent>\r\n                    </Card>\r\n                    {isEdit && <Alert severity=\"info\">Ngoài cách thêm thủ công này, bạn có thể thêm bằng cách vào trang riêng của một bộ bất kỳ.</Alert>}\r\n                    <ListDragAndDrop titles={values.titles} handleDragEnd={handleDragEnd} handleRemoveButtonClick={handleRemoveButtonClick} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card sx={{ mb: 2 }}>\r\n                        <CardHeader title=\"Tìm kiếm trong thư viện\" />\r\n                        <CardContent>\r\n                            <TitleSearch handleAddButtonClick={handleAddButtonClick} />\r\n                        </CardContent>\r\n                    </Card>\r\n                    <LoadingButton fullWidth size='large' type='submit' variant='contained' loading={isSubmitting}>Lưu lại</LoadingButton>\r\n                </Grid>\r\n            </Grid>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};","// @mui\r\nimport { Container } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport ListNewForm from '../../sections/list/ListNewForm';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n// ---------------------------------------------------------------------\r\n\r\nexport default function NewList() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  return (\r\n    <Page title=\"New List\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <ListNewForm currentList={null} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}