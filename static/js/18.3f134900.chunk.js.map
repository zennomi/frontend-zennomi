{"version":3,"sources":["constants/index.js","constants/tags.js","utils/imgur.js","sections/title/TitleNewForm.js","pages/title/NewTitle.js"],"names":["TAG_OPTION","require","TYPE_OPTION","STATUS_OPTION","GENRE_OPTION","module","exports","client","ImgurClient","IMGUR_API","LabelStyle","styled","Typography","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","TitleNewForm","isEdit","currentTitle","titleSubmit","navigate","useNavigate","enqueueSnackbar","useSnackbar","TitleSchema","Yup","shape","title","en","required","coverArt","min","defaultValues","useMemo","vi","ja","description","genres","filter","c","Boolean","tags","urls","raw","isLisensed","author","artist","status","type","zennomi","isMyProject","review","score","methods","useForm","resolver","yupResolver","reset","watch","control","setValue","handleSubmit","getValues","isSubmitting","formState","values","useEffect","onSubmit","a","linkFiles","link","isString","Promise","all","map","file","getBase64","base64Files","imgur","upload","image","replace","imgurLinks","e","data","newTitle","PATH_WIBU","one","_id","console","error","message","handleDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","Grid","container","item","xs","md","Card","sx","p","Stack","name","label","simple","showPreview","accept","maxSize","onDrop","onRemove","filteredItems","_file","onRemoveAll","render","field","Autocomplete","multiple","freeSolo","options","onChange","event","newValue","renderTags","value","getTagProps","option","index","Chip","key","size","renderInput","params","TextField","mt","placeholder","Number","target","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","LoadingButton","variant","loading","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","NewTitle","themeStretch","useSettings","axios","method","url","maxWidth"],"mappings":"kJAAA,wIAAO,IAAMA,EAAaC,EAAQ,MAErBC,EAAc,CAAC,QAAS,QAAS,SAEjCC,EAAgB,CAAC,SAAU,UAAW,YAAa,aAEnDC,EAAe,CAC1B,SACA,QACA,YACA,SACA,YACA,QACA,QACA,UACA,gBACA,QACA,SACA,aACA,SACA,QACA,UACA,eACA,SACA,QACA,UACA,gBACA,UACA,cACA,SACA,SACA,WACA,SACA,YACA,UACA,aACA,gBACA,OACA,SACA,eACA,UACA,OACA,OACA,Y,mBC3CFC,EAAOC,QAAU,CACb,iBACA,qBACA,mBACA,mBACA,mBACA,UACA,gBACA,wBACA,mBACA,aACA,QACA,4BACA,qBACA,UACA,cACA,mBACA,kBACA,wBACA,kBACA,cACA,iBACA,qBACA,mBACA,+BACA,QACA,4BACA,wCACA,gCACA,WACA,SACA,kBACA,wBACA,mBACA,4BACA,wBACA,eACA,sBACA,OACA,UACA,gBACA,eACA,QACA,YACA,iBACA,aACA,YACA,eACA,kBACA,cACA,SACA,WACA,yBACA,WACA,SACA,aACA,UACA,yBACA,+BACA,UACA,UACA,kBACA,aACA,oBACA,sBACA,oBACA,aACA,YACA,sBACA,mBACA,qBACA,UACA,eACA,sBACA,WACA,8BACA,8BACA,QACA,2BACA,cACA,WACA,sCACA,oBACA,gBACA,kBACA,oCACA,mBACA,kBACA,MACA,WACA,uBACA,OACA,SACA,YACA,oBACA,WACA,UACA,sBACA,YACA,eACA,QACA,uCACA,UACA,iBACA,iBACA,WACA,aACA,aACA,SACA,UACA,SACA,gBACA,6BACA,gBACA,SACA,mBACA,yBACA,yBACA,WACA,UACA,oBACA,SACA,MACA,cACA,gBACA,wBACA,WACA,UACA,QACA,QACA,iBACA,qBACA,kBACA,WACA,oBACA,mCACA,gBACA,cACA,OACA,0CACA,WACA,cACA,cACA,iBACA,OACA,eACA,SACA,gCACA,kCACA,iCACA,mBACA,iBACA,UACA,WACA,SACA,wBACA,YACA,yBACA,iBACA,aACA,SACA,YACA,MACA,sBACA,WACA,MACA,WACA,qBACA,UACA,YACA,YACA,QACA,mBACA,QACA,sBACA,oCACA,SACA,+BACA,gBACA,OACA,iBACA,eACA,8BACA,YACA,mBACA,iBACA,WACA,oBACA,iBACA,yBACA,oBACA,WACA,iBACA,aACA,QACA,qBACA,gBACA,UACA,oBACA,iBACA,qBACA,OACA,WACA,wBACA,SACA,kBACA,cACA,oBACA,SACA,gBACA,mBACA,aACA,mBACA,UACA,sBACA,eACA,YACA,gBACA,wBACA,YACA,YACA,QACA,MACA,iBACA,WACA,iBACA,mBACA,mBACA,SACA,mBACA,UACA,WACA,qBACA,UACA,OACA,kBACA,qCACA,0BACA,iBACA,eACA,qBACA,sBACA,4BACA,UACA,oBACA,kBACA,iBACA,gBACA,SACA,mBACA,WACA,SACA,uBACA,oBACA,aACA,yBACA,wBACA,mBACA,UACA,qBACA,aACA,QACA,sBACA,SACA,aACA,eACA,WACA,aACA,uBACA,sBACA,qBACA,cACA,gBACA,4BACA,cACA,eACA,wBACA,YACA,QACA,OACA,gBACA,iBACA,WACA,gBACA,aACA,QACA,QACA,YACA,gBACA,qBACA,gCACA,SACA,qBACA,aACA,eACA,eACA,OACA,SACA,OACA,oBACA,8BACA,YACA,QACA,2BACA,cACA,SACA,iBACA,WACA,cACA,mBACA,kBACA,cACA,iBACA,YACA,QACA,eACA,oBACA,sBACA,gCACA,SACA,oCACA,MACA,OACA,YACA,iBACA,wBACA,mBACA,oBACA,OACA,eACA,uBACA,kBACA,qCACA,6BACA,eACA,QACA,UACA,YACA,uBACA,kBACA,gBACA,UACA,wBACA,+BACA,WACA,QACA,SACA,oBACA,WACA,kBACA,QACA,WACA,UACA,iBACA,SACA,gBACA,wBACA,8BACA,gBACA,SACA,qBACA,SACA,OACA,oBACA,eACA,eACA,iBACA,WACA,qBACA,oBACA,kBACA,mBACA,yBACA,oBACA,UACA,gBACA,aACA,mBACA,UACA,WA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","file":"static/js/18.3f134900.chunk.js","sourcesContent":["export const TAG_OPTION = require(\"./tags\");\r\n\r\nexport const TYPE_OPTION = ['novel', 'manga', 'anime'];\r\n\r\nexport const STATUS_OPTION = ['hiatus', 'ongoing', 'completed', 'cancelled'];\r\n\r\nexport const GENRE_OPTION = [\r\n  'action',\r\n  'adult',\r\n  'adventure',\r\n  'comedy',\r\n  'doujinshi',\r\n  'drama',\r\n  'ecchi',\r\n  'fantasy',\r\n  'gender bender',\r\n  'harem',\r\n  'hentai',\r\n  'historical',\r\n  'horror',\r\n  'josei',\r\n  'lolicon',\r\n  'martial arts',\r\n  'mature',\r\n  'mecha',\r\n  'mystery',\r\n  'psychological',\r\n  'romance',\r\n  'school life',\r\n  'sci-fi',\r\n  'seinen',\r\n  'shotacon',\r\n  'shoujo',\r\n  'shoujo ai',\r\n  'shounen',\r\n  'shounen ai',\r\n  'slice of life',\r\n  'smut',\r\n  'sports',\r\n  'supernatural',\r\n  'tragedy',\r\n  'yaoi',\r\n  'yuri',\r\n  'oneshot'\r\n]","module.exports = [\r\n    \"pretend lovers\",\r\n    \"strong female lead\",\r\n    \"adapted to anime\",\r\n    \"childhood friend\",\r\n    \"strong male lead\",\r\n    \"age gap\",\r\n    \"love triangle\",\r\n    \"collection of stories\",\r\n    \"character growth\",\r\n    \"full color\",\r\n    \"magic\",\r\n    \"glasses-wearing male lead\",\r\n    \"dead family member\",\r\n    \"student\",\r\n    \"big breasts\",\r\n    \"possessive lover\",\r\n    \"special ability\",\r\n    \"beautiful female lead\",\r\n    \"unrequited love\",\r\n    \"high school\",\r\n    \"cross-dressing\",\r\n    \"handsome male lead\",\r\n    \"misunderstanding\",\r\n    \"student-teacher relationship\",\r\n    \"demon\",\r\n    \"older female younger male\",\r\n    \"appearance different from personality\",\r\n    \"male lead falls in love first\",\r\n    \"tsundere\",\r\n    \"incest\",\r\n    \"secret identity\",\r\n    \"friends become lovers\",\r\n    \"based on a novel\",\r\n    \"older male younger female\",\r\n    \"past plays a big role\",\r\n    \"slow romance\",\r\n    \"high school student\",\r\n    \"twin\",\r\n    \"revenge\",\r\n    \"live-in lover\",\r\n    \"borderline h\",\r\n    \"japan\",\r\n    \"web comic\",\r\n    \"female fighter\",\r\n    \"friendship\",\r\n    \"time skip\",\r\n    \"21st century\",\r\n    \"smart male lead\",\r\n    \"tragic past\",\r\n    \"murder\",\r\n    \"jealousy\",\r\n    \"older uke younger seme\",\r\n    \"bullying\",\r\n    \"orphan\",\r\n    \"first love\",\r\n    \"royalty\",\r\n    \"animal characteristics\",\r\n    \"student-student relationship\",\r\n    \"monster\",\r\n    \"vampire\",\r\n    \"young male lead\",\r\n    \"delinquent\",\r\n    \"smart female lead\",\r\n    \"unexpressed feeling\",\r\n    \"popular male lead\",\r\n    \"flashbacks\",\r\n    \"bishounen\",\r\n    \"love at first sight\",\r\n    \"romantic subplot\",\r\n    \"award-winning work\",\r\n    \"amnesia\",\r\n    \"cohabitation\",\r\n    \"adapted to drama cd\",\r\n    \"betrayal\",\r\n    \"human-nonhuman relationship\",\r\n    \"master-servant relationship\",\r\n    \"mafia\",\r\n    \"hard-working protagonist\",\r\n    \"hidden past\",\r\n    \"fellatio\",\r\n    \"important non-romantic relationship\",\r\n    \"european ambiance\",\r\n    \"reincarnation\",\r\n    \"love confession\",\r\n    \"male demographic with female lead\",\r\n    \"quirky character\",\r\n    \"brother complex\",\r\n    \"war\",\r\n    \"neighbor\",\r\n    \"rushed ending / axed\",\r\n    \"club\",\r\n    \"family\",\r\n    \"swordsman\",\r\n    \"arranged marriage\",\r\n    \"violence\",\r\n    \"webtoon\",\r\n    \"unexpected feelings\",\r\n    \"blackmail\",\r\n    \"love polygon\",\r\n    \"ghost\",\r\n    \"appearance different from actual age\",\r\n    \"reunion\",\r\n    \"transformation\",\r\n    \"weak to strong\",\r\n    \"princess\",\r\n    \"kidnapping\",\r\n    \"loneliness\",\r\n    \"spirit\",\r\n    \"brother\",\r\n    \"prince\",\r\n    \"absent parent\",\r\n    \"senpai-kouhai relationship\",\r\n    \"dark ambience\",\r\n    \"virgin\",\r\n    \"transfer student\",\r\n    \"adapted to live action\",\r\n    \"older seme younger uke\",\r\n    \"assassin\",\r\n    \"playboy\",\r\n    \"opposites attract\",\r\n    \"sadist\",\r\n    \"god\",\r\n    \"time travel\",\r\n    \"reverse harem\",\r\n    \"post-secondary school\",\r\n    \"episodic\",\r\n    \"rivalry\",\r\n    \"angst\",\r\n    \"otaku\",\r\n    \"rich male lead\",\r\n    \"death of loved one\",\r\n    \"student council\",\r\n    \"training\",\r\n    \"caught in the act\",\r\n    \"unrequited love becomes requited\",\r\n    \"office worker\",\r\n    \"dead parent\",\r\n    \"lust\",\r\n    \"character who bullies the one they love\",\r\n    \"teamwork\",\r\n    \"cunnilingus\",\r\n    \"school girl\",\r\n    \"married couple\",\r\n    \"maid\",\r\n    \"stepsiblings\",\r\n    \"genius\",\r\n    \"boss-subordinate relationship\",\r\n    \"female lead falls in love first\",\r\n    \"emotionally strong female lead\",\r\n    \"calm protagonist\",\r\n    \"cool male lead\",\r\n    \"teacher\",\r\n    \"survival\",\r\n    \"doctor\",\r\n    \"multiple protagonists\",\r\n    \"salaryman\",\r\n    \"antihero / antiheroine\",\r\n    \"bickering love\",\r\n    \"insecurity\",\r\n    \"tomboy\",\r\n    \"bodyguard\",\r\n    \"cat\",\r\n    \"outdoor intercourse\",\r\n    \"nobility\",\r\n    \"gun\",\r\n    \"siblings\",\r\n    \"bisexual character\",\r\n    \"prodigy\",\r\n    \"detective\",\r\n    \"childcare\",\r\n    \"curse\",\r\n    \"childhood trauma\",\r\n    \"music\",\r\n    \"secret organization\",\r\n    \"protagonist strong from the start\",\r\n    \"writer\",\r\n    \"transported to another world\",\r\n    \"sadomasochism\",\r\n    \"debt\",\r\n    \"obsessive love\",\r\n    \"best friends\",\r\n    \"glasses-wearing female lead\",\r\n    \"threesome\",\r\n    \"rich female lead\",\r\n    \"childhood love\",\r\n    \"contract\",\r\n    \"young female lead\",\r\n    \"sister complex\",\r\n    \"post-secondary student\",\r\n    \"sword and sorcery\",\r\n    \"military\",\r\n    \"kind male lead\",\r\n    \"dead lover\",\r\n    \"witch\",\r\n    \"clever protagonist\",\r\n    \"small breasts\",\r\n    \"suicide\",\r\n    \"naive female lead\",\r\n    \"weak male lead\",\r\n    \"clumsy protagonist\",\r\n    \"trap\",\r\n    \"coworker\",\r\n    \"androgynous male lead\",\r\n    \"dragon\",\r\n    \"strategic minds\",\r\n    \"child abuse\",\r\n    \"workplace romance\",\r\n    \"acting\",\r\n    \"single parent\",\r\n    \"manly gay couple\",\r\n    \"school boy\",\r\n    \"social hierarchy\",\r\n    \"stalker\",\r\n    \"secret relationship\",\r\n    \"comic artist\",\r\n    \"swordplay\",\r\n    \"couple growth\",\r\n    \"animal transformation\",\r\n    \"foreigner\",\r\n    \"dormitory\",\r\n    \"alien\",\r\n    \"esp\",\r\n    \"younger sister\",\r\n    \"modeling\",\r\n    \"4-koma/yonkoma\",\r\n    \"attempted murder\",\r\n    \"rich protagonist\",\r\n    \"sister\",\r\n    \"lifestyle change\",\r\n    \"yandere\",\r\n    \"politics\",\r\n    \"arrogant male lead\",\r\n    \"pervert\",\r\n    \"food\",\r\n    \"all-boys school\",\r\n    \"collection of inter-linked stories\",\r\n    \"independent female lead\",\r\n    \"subtle romance\",\r\n    \"fast romance\",\r\n    \"personality change\",\r\n    \"inferiority complex\",\r\n    \"strong-willed female lead\",\r\n    \"showbiz\",\r\n    \"split personality\",\r\n    \"younger brother\",\r\n    \"forbidden love\",\r\n    \"coming of age\",\r\n    \"cousin\",\r\n    \"adapted to movie\",\r\n    \"panchira\",\r\n    \"knight\",\r\n    \"innocent female lead\",\r\n    \"loner protagonist\",\r\n    \"prostitute\",\r\n    \"love-hate relationship\",\r\n    \"inexperienced in love\",\r\n    \"all-girls school\",\r\n    \"cosplay\",\r\n    \"talented male lead\",\r\n    \"psychopath\",\r\n    \"angel\",\r\n    \"popular female lead\",\r\n    \"artist\",\r\n    \"conspiracy\",\r\n    \"world travel\",\r\n    \"marriage\",\r\n    \"tournament\",\r\n    \"award-nominated work\",\r\n    \"drunken intercourse\",\r\n    \"university student\",\r\n    \"dead friend\",\r\n    \"game elements\",\r\n    \"misunderstood protagonist\",\r\n    \"stolen kiss\",\r\n    \"undergarment\",\r\n    \"shameless female lead\",\r\n    \"pregnancy\",\r\n    \"korea\",\r\n    \"game\",\r\n    \"part-time job\",\r\n    \"social outcast\",\r\n    \"accident\",\r\n    \"exhibitionism\",\r\n    \"experiment\",\r\n    \"crime\",\r\n    \"dream\",\r\n    \"roommates\",\r\n    \"serial killer\",\r\n    \"school intercourse\",\r\n    \"double / multiple penetration\",\r\n    \"isekai\",\r\n    \"appearance changes\",\r\n    \"first kiss\",\r\n    \"super powers\",\r\n    \"mature child\",\r\n    \"drug\",\r\n    \"fetish\",\r\n    \"gang\",\r\n    \"comedic undertone\",\r\n    \"businessman / businesswoman\",\r\n    \"masochist\",\r\n    \"ninja\",\r\n    \"serioustudious character\",\r\n    \"rich family\",\r\n    \"injury\",\r\n    \"tall male lead\",\r\n    \"werewolf\",\r\n    \"competition\",\r\n    \"female dominance\",\r\n    \"changed by love\",\r\n    \"immortality\",\r\n    \"police officer\",\r\n    \"classmate\",\r\n    \"slave\",\r\n    \"family drama\",\r\n    \"affectionate seme\",\r\n    \"extended flashbacks\",\r\n    \"reincarnated in another world\",\r\n    \"police\",\r\n    \"female demographic with male lead\",\r\n    \"elf\",\r\n    \"idol\",\r\n    \"deception\",\r\n    \"cold male lead\",\r\n    \"perverted female lead\",\r\n    \"stepsibling love\",\r\n    \"sudden appearance\",\r\n    \"scar\",\r\n    \"host/hostess\",\r\n    \"talented female lead\",\r\n    \"demon lord/king\",\r\n    \"love interests who don't get along\",\r\n    \"politics involving royalty\",\r\n    \"armed combat\",\r\n    \"robot\",\r\n    \"torture\",\r\n    \"body swap\",\r\n    \"parental abandonment\",\r\n    \"short male lead\",\r\n    \"older brother\",\r\n    \"samurai\",\r\n    \"hot-blooded male lead\",\r\n    \"emotionally weak female lead\",\r\n    \"swimsuit\",\r\n    \"guilt\",\r\n    \"regret\",\r\n    \"attempted suicide\",\r\n    \"rich kid\",\r\n    \"naive male lead\",\r\n    \"actor\",\r\n    \"bromance\",\r\n    \"cooking\",\r\n    \"ambitious goal\",\r\n    \"zombie\",\r\n    \"middle school\",\r\n    \"guardian relationship\",\r\n    \"chasing after love interest\",\r\n    \"fantasy world\",\r\n    \"future\",\r\n    \"abandoned children\",\r\n    \"travel\",\r\n    \"wish\",\r\n    \"childhood promise\",\r\n    \"older sister\",\r\n    \"manipulation\",\r\n    \"discrimination\",\r\n    \"exorcism\",\r\n    \"brother and sister\",\r\n    \"marriage proposal\",\r\n    \"adapted to game\",\r\n    \"adapted to manga\",\r\n    \"first-time intercourse\",\r\n    \"dense protagonist\",\r\n    \"kuudere\",\r\n    \"second change\",\r\n    \"depression\",\r\n    \"limited lifespan\",\r\n    \"zennomi\",\r\n    \"licensed\",\r\n    \"male protagonist\",\r\n    \"teasing protagonist\"\r\n]","import ImgurClient from 'imgur';\r\nimport { IMGUR_API, FIREBASE_API } from '../config';\r\n\r\nconst client = new ImgurClient(IMGUR_API);\r\n\r\nexport default client;","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useMemo, useCallback } from 'react';\r\nimport isString from 'lodash/isString';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Card, Chip, Grid, Stack, TextField, Typography, Autocomplete, Box, InputAdornment } from '@mui/material';\r\n// routes\r\nimport { PATH_WIBU } from '../../routes/paths';\r\n// components\r\nimport {\r\n  FormProvider,\r\n  RHFSelect,\r\n  RHFEditor,\r\n  RHFTextField,\r\n  RHFUploadMultiFile,\r\n  RHFSwitch\r\n} from '../../components/hook-form';\r\n// utils\r\nimport imgur from '../../utils/imgur';\r\nimport { TYPE_OPTION, STATUS_OPTION, GENRE_OPTION, TAG_OPTION } from '../../constants';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTitleNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentTitle: PropTypes.object,\r\n  titleSubmit: PropTypes.func\r\n};\r\n\r\nexport default function TitleNewForm({ isEdit, currentTitle, titleSubmit }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const TitleSchema = Yup.object().shape({\r\n    title: Yup.object().shape({\r\n      en: Yup.string().required('Name is required'),\r\n    }),\r\n    coverArt: Yup.array().min(1, 'Images is required'),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      title: {\r\n        en: currentTitle?.title.en || '',\r\n        vi: currentTitle?.title.vi || '',\r\n        ja: currentTitle?.title.ja || ''\r\n      },\r\n      description: currentTitle?.description || '',\r\n      genres: currentTitle?.genres || ['romance', 'comedy'],\r\n      coverArt: currentTitle?.coverArt.filter(c => Boolean(c)) || [],\r\n      tags: currentTitle?.tags || [],\r\n      urls: {\r\n        raw: currentTitle?.urls.raw || [],\r\n        vi: currentTitle?.urls.vi || [],\r\n        en: currentTitle?.urls.en || [],\r\n      },\r\n      isLisensed: currentTitle?.isLisensed || false,\r\n      author: currentTitle?.author || [],\r\n      artist: currentTitle?.artist || [],\r\n      status: currentTitle?.status || 'ongoing',\r\n      type: currentTitle?.type || 'manga',\r\n      zennomi: currentTitle?.zennomi || {\r\n        isMyProject: false,\r\n        review: \"\"\r\n      },\r\n      score: currentTitle?.score || 0\r\n    }),\r\n    [currentTitle]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(TitleSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentTitle) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n  }, [isEdit, currentTitle]);\r\n\r\n  const onSubmit = async (title) => {\r\n    try {\r\n      const linkFiles = title.coverArt.filter(link => isString(link));\r\n      const base64Files = await Promise.all(title.coverArt.filter(link => !isString(link)).map(file => getBase64(file)));\r\n      const imgurLinks = await imgur.upload(base64Files.map(file => ({ image: file.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\"), type: 'base64' })));\r\n      title.coverArt = [...imgurLinks.map(e => e.data.link), ...linkFiles];\r\n      const { data } = await titleSubmit({ ...title });\r\n      const { data: newTitle } = data;\r\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n      navigate(`${PATH_WIBU.title.one}/${newTitle._id}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar(error.message);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    async (acceptedFiles) => {\r\n      setValue(\r\n        'coverArt',\r\n        acceptedFiles.map(file =>\r\n          isString(file) ? file : Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const handleRemoveAll = () => {\r\n    setValue('coverArt', []);\r\n  };\r\n\r\n  const handleRemove = (file) => {\r\n    const filteredItems = values.coverArt?.filter((_file) => _file !== file);\r\n    setValue('coverArt', filteredItems);\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Stack spacing={1}>\r\n              <RHFTextField name=\"title.en\" label=\"Tựa đề phổ biến\" />\r\n              <RHFTextField name=\"title.ja\" label=\"Tựa gốc\" />\r\n              <RHFTextField name=\"title.vi\" label=\"Tựa tiếng Việt\" />\r\n              <div>\r\n                <LabelStyle>Description</LabelStyle>\r\n                <RHFEditor simple name=\"description\" />\r\n              </div>\r\n              <div>\r\n                <LabelStyle>Zennomi review</LabelStyle>\r\n                <RHFEditor simple name=\"zennomi.review\" />\r\n              </div>\r\n              <div>\r\n                <LabelStyle>Images</LabelStyle>\r\n                <RHFUploadMultiFile\r\n                  name=\"coverArt\"\r\n                  showPreview\r\n                  accept=\"image/*\"\r\n                  maxSize={3145728}\r\n                  onDrop={handleDrop}\r\n                  onRemove={handleRemove}\r\n                  onRemoveAll={handleRemoveAll}\r\n                />\r\n              </div>\r\n\r\n              <Controller\r\n                name=\"urls.vi\"\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Autocomplete\r\n                    {...field}\r\n                    multiple\r\n                    freeSolo\r\n                    options={[]}\r\n                    onChange={(event, newValue) => field.onChange(newValue)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField label=\"Link việt\" {...params} />}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"urls.raw\"\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Autocomplete\r\n                    {...field}\r\n                    multiple\r\n                    freeSolo\r\n                    options={[]}\r\n                    onChange={(event, newValue) => field.onChange(newValue)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField label=\"Link raw\" {...params} />}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"urls.en\"\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Autocomplete\r\n                    {...field}\r\n                    multiple\r\n                    freeSolo\r\n                    options={[]}\r\n                    onChange={(event, newValue) => field.onChange(newValue)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField label=\"Link eng\" {...params} />}\r\n                  />\r\n                )}\r\n              />\r\n\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Stack spacing={3}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3} mt={2}>\r\n                <RHFSwitch name=\"zennomi.isMyProject\" label=\"Dự án của Zennomi\" />\r\n                <RHFSwitch name=\"isLisensed\" label=\"Có bản quyền\" />\r\n\r\n                <RHFTextField\r\n                  name=\"score\"\r\n                  label=\"Điểm số\"\r\n                  placeholder=\"0.00\"\r\n                  value={getValues('score') === 0 ? '' : getValues('score')}\r\n                  onChange={(event) => setValue('score', Number(event.target.value))}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">/100</InputAdornment>,\r\n                    type: 'number',\r\n                  }}\r\n                />\r\n\r\n                <RHFSelect name=\"type\" label=\"Type\">\r\n                  {TYPE_OPTION.map((status) => (\r\n                    <option>{status}</option>\r\n                  ))}\r\n                </RHFSelect>\r\n\r\n\r\n                <RHFSelect name=\"status\" label=\"Status\">\r\n                  {STATUS_OPTION.map((status) => (\r\n                    <option>{status}</option>\r\n                  ))}\r\n                </RHFSelect>\r\n                <Controller\r\n                  name=\"genres\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      {...field}\r\n                      multiple\r\n                      freeSolo\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={GENRE_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Genres\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n                <Controller\r\n                  name=\"tags\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      {...field}\r\n                      multiple\r\n                      freeSolo\r\n                      options={[]}\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={TAG_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Tags\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Card>\r\n\r\n            <Card sx={{ p: 3 }}>\r\n              <Controller\r\n                name=\"author\"\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Autocomplete\r\n                    {...field}\r\n                    multiple\r\n                    freeSolo\r\n                    options={[]}\r\n                    onChange={(event, newValue) => field.onChange(newValue)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField label=\"Tác giả\" {...params} />}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name=\"artist\"\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Autocomplete\r\n                    {...field}\r\n                    multiple\r\n                    freeSolo\r\n                    options={[]}\r\n                    onChange={(event, newValue) => field.onChange(newValue)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField label=\"Hoạ sĩ\" {...params} />}\r\n                  />\r\n                )}\r\n              />\r\n            </Card>\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\r\n              {!isEdit ? 'Create Title' : 'Save Changes'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nconst getBase64 = file => {\r\n  return new Promise(resolve => {\r\n    let fileInfo;\r\n    let baseURL = \"\";\r\n    // Make new FileReader\r\n    let reader = new FileReader();\r\n    // Convert the file to base64 text\r\n    reader.readAsDataURL(file);\r\n    // on reader load somthing...\r\n    reader.onload = () => {\r\n      // Make a fileInfo Object\r\n      baseURL = reader.result;\r\n      resolve(baseURL);\r\n    };\r\n  });\r\n};","// @mui\r\nimport { Container } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport TitleNewForm from '../../sections/title/TitleNewForm';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n// ---------------------------------------------------------------------\r\n\r\nexport default function NewTitle() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const titleSubmit = async (title) => {\r\n    return await axios({\r\n      method: 'post',\r\n      url: `/v1/titles`,\r\n      data: title,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Page title=\"New Title\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <TitleNewForm currentTitle={null} titleSubmit={titleSubmit} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}